name: Test Coverage

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test-coverage:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x' # Adjust if needed

    - name: Restore Dependencies
      run: dotnet restore

    - name: Build Solution
      run: dotnet build --configuration Release --no-restore

    - name: Run Tests with Coverage
      run: dotnet test --collect:"XPlat Code Coverage"

    - name: Find Coverage Report
      run: |
        echo "Locating coverage report..."
        find . -name "coverage.cobertura.xml"

    - name: Install Report Generator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report
      run: |
        reportgenerator -reports:$(find . -name "coverage.cobertura.xml") -targetdir:coveragereport -reporttypes:Html

    - name: Upload Coverage Report as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coveragereport

    - name: Display Coverage Summary in Job Output
      run: |
        echo "### Test Coverage Report Generated" >> $GITHUB_STEP_SUMMARY
        echo "Download the HTML report from the 'Actions' tab under 'Artifacts'." >> $GITHUB_STEP_SUMMARY
